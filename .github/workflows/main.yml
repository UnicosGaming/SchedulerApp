# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#env:
#  USER_PROFILE:  $MSBuildProjectDirectory
jobs:
  # Build App
  build:
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.0        

      - name: Build SchedulerApp Solution
        env:
          SCHEDULER_APP_KEY: ${{ secrets.SCHEDULER_APP_KEY }}
          SCHEDULER_APP_MSAL_KEY: ${{ secrets.SCHEDULER_APP_MSAL_KEY }}
        run: msbuild ./SchedulerApp.sln /restore
        
      #- name: Show some env
      #  run: |
      #    write-host WORKSPACE: $env:GITHUB_WORKSPACE
      #    write-host ANDROID_HOME: $env:ANDROID_HOME
      #    write-host MSBuildProjectDirectory: $env:MSBuildProjectDirectory
      #    write-host OutputPath: $env:OutputPath
      
      #- name: JDK Keytool
      #  run: $env.JAVA_HOME\bin\keytool -genkey -v -keystore -alias "app_key" -keylag RSA -keysize 2048 -validity 10000
        
      #- name: Android SDK
      #  run: ${{ env.ANDROID_HOME }}\build-tools\29.0.2\zipalign.exe -f -v 4 ${{ env.MSBuildProjectDirectory }}\${{ env.OutputPath }}\com.companyname.appname.apk ${{ env.MSBuildProjectDirectory }}\${{ env.OutputPath }}\SchedulerApp.apk
          
      #- name: Sign APK
      #  run: ${{ ANDROID_HOME }}\build-tools\29.0.2\apksigner.bat sign --ks "app_key" --ks-key-alias "
      #- name: Upload artifact
      #  uses: actions/upload-artifact@v2
      #  with:
      #    path: ${{ env.MSBuildProjectDirectory }}/${{ env.OutpuPath }}/*.apk 

