# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Build App
  build:
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.0        

      - name: Build SchedulerApp Solution
        env:
          SCHEDULER_APP_KEY: ${{ secrets.SCHEDULER_APP_KEY }}
          SCHEDULER_APP_MSAL_KEY: ${{ secrets.SCHEDULER_APP_MSAL_KEY }}
        run: msbuild ./SchedulerApp.sln /restore
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.MSBuildProjectDirectory }}/${{ env.OutputDirectory }}/*.apk 
       
  
  # Generate APK and upload the Artifact
  #deploy:
  #  needs: [build]
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Check env variables
  #      run: |
  #        ${{ env.MSBuildStartupDirectory }}
  #        ${{ env.MSBuildProjectDirectory }}
      #- name: Generate Xamarin Form Android APK
      #  uses: fahimshahrierrasel/Xamarin-Droid-Builder@1.0.2
      #  with:
      #    SOLUTION_NAME: ${{ env.MSBuildStartupDirectory }}
      #    ANDROID_PROJECT_NAME: ${{ env.MSBuildProjectDirectory }}
          #args: /r:True /t:SignAndroidPackage /p:AndroidSdkDirectory=/android/sdk ${{ env.MSBuildProject }}
        
      #- name: Artifacts
      #  run: |
      #    mkdir -p apks
      #    cp ${{ env.MSBuildProjectDirectory }}/bin/Debug/*.apk apks
      #- name: Upload artifact
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: apks
      #    path: apks
